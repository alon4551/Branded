{"ast":null,"code":"var _jsxFileName = \"G:\\\\React_Projects\\\\branded\\\\src\\\\Profile\\\\Profile.js\";\nimport React, { Component } from 'react';\nimport Field from '../Field';\nimport targets from '../targets.json';\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateUser = (field, value) => {\n      let user = this.state.user;\n\n      switch (field) {\n        case 'firstName':\n          user.firstName = value;\n          break;\n\n        case 'lastName':\n          user.lastName = value;\n          break;\n\n        case 'email':\n          user.email = value;\n          break;\n\n        case 'birthday':\n          user.birthday = value;\n          break;\n\n        case 'gender':\n          user.gender = value;\n          break;\n\n        case 'password':\n          user.password = value;\n          break;\n      }\n\n      this.setState({\n        user: user\n      });\n    };\n\n    this.onChange = input => {\n      this.updateUser(input.target.id, input.target.value);\n    };\n\n    this.onSubmit = () => {\n      fetch(targets.update, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(this.state.user)\n      }).then(response => {\n        if (response.status === 200) alert('Updated');else alert('Failed');\n      }).catch(err => console.log(err));\n    };\n\n    this.state = {\n      user: {\n        firstName: '',\n        lastName: '',\n        email: props.email,\n        birthday: Date.now(),\n        gender: '',\n        password: ''\n      }\n    };\n  }\n\n  componentDidMount() {\n    fetch(targets.genders).then(response => response.json()).then(data => {\n      this.setState({\n        genders: data\n      });\n      this.updateUser('gender', 0);\n    });\n  }\n\n  render() {\n    const {\n      onChange,\n      onSubmit\n    } = this;\n    const {\n      genders\n    } = this.props;\n    const {\n      user\n    } = this.state;\n    const list = genders.map(item => /*#__PURE__*/React.createElement(\"option\", {\n      label: item.gender,\n      value: item.gender,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, item.gender));\n    return /*#__PURE__*/React.createElement(\"form\", {\n      method: \"POST\",\n      action: targets.signin,\n      href: \"#\",\n      target: \"/\",\n      className: \"center measure \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"legend\", {\n      className: \"f4 fw6 ph0 mh0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, \"Profile\"), /*#__PURE__*/React.createElement(Field, {\n      action: onChange,\n      type: \"email\",\n      value: user.email,\n      id: \"email\",\n      name: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      action: onChange,\n      type: \"firstname\",\n      value: user.firstName,\n      id: \"firstName\",\n      name: \"First Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      action: onChange,\n      type: \"lastname\",\n      value: user.lastName,\n      id: \"lastName\",\n      name: \"Last Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      action: onChange,\n      type: \"date\",\n      value: user.birthday,\n      id: \"birthday\",\n      name: \"Birthday\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      id: \"gender\",\n      value: user.gender,\n      className: \"w-100  mt3 db h2 f6 bg-near-white ba b--sliver gray\",\n      onClick: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, list), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"legend\", {\n      className: \"f4 fw6 ph0 mh0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, \"Please enter password to apply changes\"), /*#__PURE__*/React.createElement(Field, {\n      action: onChange,\n      type: \"password\",\n      id: \"password\",\n      name: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\",\n      type: \"reset\",\n      onClick: onSubmit,\n      value: \"Update\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default Profile;","map":{"version":3,"sources":["G:/React_Projects/branded/src/Profile/Profile.js"],"names":["React","Component","Field","targets","Profile","constructor","props","updateUser","field","value","user","state","firstName","lastName","email","birthday","gender","password","setState","onChange","input","target","id","onSubmit","fetch","update","method","headers","body","JSON","stringify","then","response","status","alert","catch","err","console","log","Date","now","componentDidMount","genders","json","data","render","list","map","item","signin"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,iBAApB;;AACA,MAAMC,OAAN,SAAsBH,SAAtB,CAA+B;AAC3BI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAqBlBC,UArBkB,GAqBP,CAACC,KAAD,EAAOC,KAAP,KAAe;AACtB,UAAIC,IAAI,GAAC,KAAKC,KAAL,CAAWD,IAApB;;AACA,cAAOF,KAAP;AACI,aAAK,WAAL;AACIE,UAAAA,IAAI,CAACE,SAAL,GAAeH,KAAf;AACA;;AACA,aAAK,UAAL;AACIC,UAAAA,IAAI,CAACG,QAAL,GAAcJ,KAAd;AACJ;;AACA,aAAK,OAAL;AACIC,UAAAA,IAAI,CAACI,KAAL,GAAWL,KAAX;AACJ;;AACA,aAAK,UAAL;AACIC,UAAAA,IAAI,CAACK,QAAL,GAAcN,KAAd;AACJ;;AACA,aAAK,QAAL;AACIC,UAAAA,IAAI,CAACM,MAAL,GAAYP,KAAZ;AACJ;;AACA,aAAK,UAAL;AACIC,UAAAA,IAAI,CAACO,QAAL,GAAcR,KAAd;AACJ;AAlBR;;AAoBA,WAAKS,QAAL,CAAc;AAACR,QAAAA,IAAI,EAACA;AAAN,OAAd;AACH,KA5CiB;;AAAA,SA6ClBS,QA7CkB,GA6CRC,KAAD,IAAS;AACd,WAAKb,UAAL,CAAgBa,KAAK,CAACC,MAAN,CAAaC,EAA7B,EAAgCF,KAAK,CAACC,MAAN,CAAaZ,KAA7C;AACH,KA/CiB;;AAAA,SAiDlBc,QAjDkB,GAiDT,MAAI;AACTC,MAAAA,KAAK,CAACrB,OAAO,CAACsB,MAAT,EAAgB;AACjBC,QAAAA,MAAM,EAAC,KADU;AAEjBC,QAAAA,OAAO,EAAC;AAAC,0BAAe;AAAhB,SAFS;AAGjBC,QAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe,KAAKnB,KAAL,CAAWD,IAA1B;AAHY,OAAhB,CAAL,CAKCqB,IALD,CAKMC,QAAQ,IAAE;AACZ,YAAGA,QAAQ,CAACC,MAAT,KAAkB,GAArB,EACIC,KAAK,CAAC,SAAD,CAAL,CADJ,KAGIA,KAAK,CAAC,QAAD,CAAL;AACP,OAVD,EAWCC,KAXD,CAWOC,GAAG,IAAEC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAXZ;AAYH,KA9DiB;;AAEd,SAAKzB,KAAL,GAAW;AACPD,MAAAA,IAAI,EAAC;AACDE,QAAAA,SAAS,EAAC,EADT;AAEDC,QAAAA,QAAQ,EAAC,EAFR;AAGDC,QAAAA,KAAK,EAACR,KAAK,CAACQ,KAHX;AAIDC,QAAAA,QAAQ,EAACwB,IAAI,CAACC,GAAL,EAJR;AAKDxB,QAAAA,MAAM,EAAC,EALN;AAMDC,QAAAA,QAAQ,EAAC;AANR;AADE,KAAX;AAUH;;AACDwB,EAAAA,iBAAiB,GAAE;AACfjB,IAAAA,KAAK,CAACrB,OAAO,CAACuC,OAAT,CAAL,CACCX,IADD,CACMC,QAAQ,IAAEA,QAAQ,CAACW,IAAT,EADhB,EAECZ,IAFD,CAEMa,IAAI,IAAE;AACR,WAAK1B,QAAL,CAAc;AAACwB,QAAAA,OAAO,EAACE;AAAT,OAAd;AACA,WAAKrC,UAAL,CAAgB,QAAhB,EAAyB,CAAzB;AACH,KALD;AAMH;;AA2CDsC,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAC1B,MAAAA,QAAD;AAAUI,MAAAA;AAAV,QAAqB,IAA3B;AACA,UAAM;AAACmB,MAAAA;AAAD,QAAU,KAAKpC,KAArB;AACA,UAAM;AAACI,MAAAA;AAAD,QAAO,KAAKC,KAAlB;AACA,UAAMmC,IAAI,GAACJ,OAAO,CAACK,GAAR,CAAaC,IAAD,iBACvB;AAAQ,MAAA,KAAK,EAAEA,IAAI,CAAChC,MAApB;AAA4B,MAAA,KAAK,EAAEgC,IAAI,CAAChC,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKgC,IAAI,CAAChC,MADV,CADW,CAAX;AAIA,wBACA;AAAM,MAAA,MAAM,EAAC,MAAb;AAAoB,MAAA,MAAM,EAAEb,OAAO,CAAC8C,MAApC;AAA4C,MAAA,IAAI,EAAC,GAAjD;AAAqD,MAAA,MAAM,EAAC,GAA5D;AAAgE,MAAA,SAAS,EAAC,iBAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAQ,MAAA,SAAS,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,eAEA,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE9B,QAAf;AAAyB,MAAA,IAAI,EAAC,OAA9B;AAAsC,MAAA,KAAK,EAAET,IAAI,CAACI,KAAlD;AAAyD,MAAA,EAAE,EAAC,OAA5D;AAAoE,MAAA,IAAI,EAAC,OAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,eAGA,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAEK,QAAf;AAAyB,MAAA,IAAI,EAAC,WAA9B;AAA0C,MAAA,KAAK,EAAET,IAAI,CAACE,SAAtD;AAAiE,MAAA,EAAE,EAAC,WAApE;AAAgF,MAAA,IAAI,EAAC,YAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,eAIA,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAEO,QAAf;AAAyB,MAAA,IAAI,EAAC,UAA9B;AAAyC,MAAA,KAAK,EAAET,IAAI,CAACG,QAArD;AAA+D,MAAA,EAAE,EAAC,UAAlE;AAA6E,MAAA,IAAI,EAAC,WAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJA,eAKA,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAEM,QAAf;AAAyB,MAAA,IAAI,EAAC,MAA9B;AAAqC,MAAA,KAAK,EAAET,IAAI,CAACK,QAAjD;AAA2D,MAAA,EAAE,EAAC,UAA9D;AAAyE,MAAA,IAAI,EAAC,UAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALA,eAMA;AAAQ,MAAA,EAAE,EAAC,QAAX;AAAoB,MAAA,KAAK,EAAEL,IAAI,CAACM,MAAhC;AACC,MAAA,SAAS,EAAC,qDADX;AAEC,MAAA,OAAO,EAAEG,QAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIC2B,IAJD,CANA,eAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZA,eAaA;AAAQ,MAAA,SAAS,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAbA,eAcA,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE3B,QAAf;AAAyB,MAAA,IAAI,EAAC,UAA9B;AAAyC,MAAA,EAAE,EAAC,UAA5C;AAAuD,MAAA,IAAI,EAAC,UAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdA,eAeA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,SAAS,EAAC,sEAAjB;AACA,MAAA,IAAI,EAAC,OADL;AAEA,MAAA,OAAO,EAAEI,QAFT;AAGA,MAAA,KAAK,EAAC,QAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAfA,CADA;AA0BH;;AAlG0B;;AAoG/B,eAAenB,OAAf","sourcesContent":["import React,{Component} from 'react';\r\nimport Field from '../Field';\r\nimport targets from '../targets.json';\r\nclass Profile extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            user:{\r\n                firstName:'',\r\n                lastName:'',\r\n                email:props.email,\r\n                birthday:Date.now(),\r\n                gender:'',\r\n                password:''\r\n            }\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        fetch(targets.genders)\r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            this.setState({genders:data})\r\n            this.updateUser('gender',0);\r\n        });\r\n    }\r\n    updateUser=(field,value)=>{\r\n        let user=this.state.user;\r\n        switch(field){\r\n            case 'firstName':\r\n                user.firstName=value;\r\n                break;\r\n                case 'lastName':\r\n                    user.lastName=value;\r\n                break;\r\n                case 'email':\r\n                    user.email=value;\r\n                break;\r\n                case 'birthday':\r\n                    user.birthday=value;\r\n                break;\r\n                case 'gender':\r\n                    user.gender=value;\r\n                break;\r\n                case 'password':\r\n                    user.password=value;\r\n                break;\r\n        }\r\n        this.setState({user:user});\r\n    } \r\n    onChange=(input)=>{\r\n        this.updateUser(input.target.id,input.target.value);\r\n    }\r\n    \r\n    onSubmit=()=>{\r\n        fetch(targets.update,{\r\n            method:\"PUT\",\r\n            headers:{\"Content-Type\":\"application/json\"},\r\n            body:JSON.stringify(this.state.user)\r\n        })\r\n        .then(response=>{\r\n            if(response.status===200)\r\n                alert('Updated');\r\n            else\r\n                alert('Failed');\r\n        })\r\n        .catch(err=>console.log(err));\r\n    }\r\n    render(){\r\n        const {onChange,onSubmit} =this;\r\n        const {genders}=this.props;\r\n        const {user}=this.state;\r\n        const list=genders.map((item)=> \r\n        <option label={item.gender} value={item.gender}>\r\n            {item.gender}\r\n        </option>)\r\n        return( \r\n        <form method=\"POST\" action={targets.signin} href=\"#\" target=\"/\" className=\"center measure \">\r\n        <legend className=\"f4 fw6 ph0 mh0\">Profile</legend>\r\n        <Field action={onChange} type=\"email\" value={user.email} id=\"email\" name=\"Email\" />\r\n        <Field action={onChange} type=\"firstname\" value={user.firstName} id=\"firstName\" name=\"First Name\"/>\r\n        <Field action={onChange} type=\"lastname\" value={user.lastName} id=\"lastName\" name=\"Last Name\"/>\r\n        <Field action={onChange} type=\"date\" value={user.birthday} id=\"birthday\" name=\"Birthday\"/>\r\n        <select id=\"gender\" value={user.gender}\r\n         className=\"w-100  mt3 db h2 f6 bg-near-white ba b--sliver gray\" \r\n         onClick={onChange}\r\n         >\r\n        {list}\r\n        </select>\r\n        <hr/>\r\n        <legend className=\"f4 fw6 ph0 mh0\">Please enter password to apply changes</legend>\r\n        <Field action={onChange} type=\"password\" id=\"password\" name=\"Password\"/>\r\n        <div className=\"mt3\">\r\n            <input className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n            type=\"reset\"\r\n            onClick={onSubmit}\r\n            value=\"Update\"\r\n            />\r\n        </div>\r\n        \r\n        </form>\r\n        );\r\n    }\r\n}\r\nexport default Profile;"]},"metadata":{},"sourceType":"module"}