{"ast":null,"code":"var _jsxFileName = \"G:\\\\React_Projects\\\\branded\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport targets from './targets.json';\nimport Login from './login';\nimport Register from './register';\nimport Accounts from './Accounts';\nimport Profile from './Profile';\nimport Nav from './Nav';\nimport Password from './Password';\nimport Remove from './Remove';\nimport './App.css';\nimport 'tachyons';\nconst initState = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  birthday: '',\n  gender: '',\n  password: ''\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.updateUser = (field, value) => {\n      let user = this.state.user;\n\n      switch (field) {\n        case 'firstName':\n          user.firstName = value;\n          break;\n\n        case 'lastName':\n          user.lastName = value;\n          break;\n\n        case 'email':\n          user.email = value;\n          break;\n\n        case 'birthday':\n          user.birthday = value;\n          break;\n\n        case 'gender':\n          user.gender = value;\n          break;\n\n        case 'password':\n          user.password = value;\n          break;\n      }\n\n      this.setState({\n        user: user\n      });\n    };\n\n    this.onChange = input => {\n      this.updateUser(input.target.id, input.target.value);\n    };\n\n    this.onLogOut = () => {\n      fetch(targets.signout, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(this.state.user)\n      }).then(response => {\n        if (response.status === 200) {\n          alert('Sign Out');\n          this.setState({\n            login: false,\n            user: initState,\n            retrive: initState\n          });\n          this.onRouteChange('signin');\n          return response.json();\n        } else alert('Failed');\n      }).then(data => this.setState({\n        retrive: data\n      })).catch(err => {\n        console.log(err);\n        this.setState({\n          login: false,\n          user: initState,\n          retrive: initState\n        });\n      });\n    };\n\n    this.onLogIn = () => {\n      fetch(targets.signin, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(this.state.user)\n      }).then(response => {\n        if (response.status === 200) {\n          alert('Sign In');\n          this.setState({\n            login: true\n          });\n          this.onRouteChange('users');\n          return response.json();\n        } else alert('Failed');\n      }).then(data => this.setState({\n        retrive: data\n      })).catch(err => {\n        console.log(err);\n        this.setState({\n          login: false\n        });\n      });\n    };\n\n    this.onRegister = () => {\n      fetch(targets.signup, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(this.state.user)\n      }).then(response => {\n        if (response.status === 200) alert('Sign up');else alert('Failed');\n      }).catch(err => console.log(err));\n    };\n\n    this.getRoute = () => {\n      const {\n        onChange,\n        onLogIn,\n        onRegister\n      } = this;\n      const {\n        genders,\n        active\n      } = this.state;\n\n      switch (this.state.route) {\n        case 'signin':\n          return /*#__PURE__*/React.createElement(Login, {\n            onChange: onChange,\n            onSubmit: onLogIn,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 16\n            }\n          });\n\n        case 'signup':\n          return /*#__PURE__*/React.createElement(Register, {\n            onChange: onChange,\n            onSubmit: onRegister,\n            genders: genders,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 16\n            }\n          });\n\n        case 'users':\n          return /*#__PURE__*/React.createElement(Accounts, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 18\n            }\n          });\n\n        case 'profile':\n          return /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 18\n            }\n          }, /*#__PURE__*/React.createElement(Profile, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 14\n            }\n          }), /*#__PURE__*/React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }\n          }), /*#__PURE__*/React.createElement(Password, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }\n          }), /*#__PURE__*/React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }\n          }), /*#__PURE__*/React.createElement(Remove, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }\n          }), /*#__PURE__*/React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }\n          }));\n\n        default:\n          return /*#__PURE__*/React.createElement(Login, {\n            onChange: onChange,\n            onSubmit: onLogIn,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 16\n            }\n          });\n      }\n    };\n\n    this.onRouteChange = route => {\n      this.setState({\n        route\n      });\n    };\n\n    this.state = {\n      user: initState,\n      retrive: {},\n      login: false,\n      active: [],\n      genders: [],\n      route: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch(targets.genders).then(response => response.json()).then(data => this.setState({\n      genders: data\n    }));\n    fetch(targets.active).then(response => response.json()).then(data => this.setState({\n      active: data\n    }));\n  }\n\n  render() {\n    const {\n      onRouteChange,\n      getRoute\n    } = this;\n    const view = getRoute();\n    const {\n      login\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"nav\", {\n      class: \"ph3 ph5-ns pv4 w-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"nowrap overflow-x-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }, login ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Nav, {\n      action: onRouteChange,\n      link: \"users\",\n      name: \"Active Users\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Nav, {\n      action: onRouteChange,\n      link: \"profile\",\n      name: \"Profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Nav, {\n      action: onRouteChange,\n      link: \"signin\",\n      name: \"Sign Out\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Nav, {\n      action: onRouteChange,\n      link: \"signin\",\n      name: \"Sign In\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Nav, {\n      action: onRouteChange,\n      link: \"signup\",\n      name: \"Sign Up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }\n    })))), view);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["G:/React_Projects/branded/src/App.js"],"names":["React","Component","Switch","Route","Link","targets","Login","Register","Accounts","Profile","Nav","Password","Remove","initState","firstName","lastName","email","birthday","gender","password","App","constructor","updateUser","field","value","user","state","setState","onChange","input","target","id","onLogOut","fetch","signout","method","headers","body","JSON","stringify","then","response","status","alert","login","retrive","onRouteChange","json","data","catch","err","console","log","onLogIn","signin","onRegister","signup","getRoute","genders","active","route","componentDidMount","render","view"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport targets from './targets.json';\nimport Login from './login';\nimport Register from './register';\nimport Accounts from './Accounts';\nimport Profile from './Profile';\nimport Nav from './Nav';\nimport Password from './Password';\nimport Remove from './Remove';\nimport './App.css';\nimport 'tachyons';\nconst initState={\n  firstName: '',\n  lastName: '',\n  email: '',\n  birthday: '',\n  gender: '',\n  password: ''\n}\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user: initState,\n      retrive:{},\n      login: false,\n      active: [],\n      genders: [],\n      route: ''\n\n    }\n  }\n  componentDidMount(){\n    fetch(targets.genders)\n    .then(response=>response.json())\n    .then(data=>this.setState({genders:data}))\n    fetch(targets.active)\n    .then(response=>response.json())\n    .then(data=>this.setState({active:data}))\n  }\n  updateUser = (field, value) => {\n    let user = this.state.user;\n    switch (field) {\n      case 'firstName':\n        user.firstName = value;\n        break;\n      case 'lastName':\n        user.lastName = value;\n        break;\n      case 'email':\n        user.email = value;\n        break;\n      case 'birthday':\n        user.birthday = value;\n        break;\n      case 'gender':\n        user.gender = value;\n        break;\n      case 'password':\n        user.password = value;\n        break;\n    }\n    this.setState({ user: user });\n  }\n  onChange = (input) => {\n    this.updateUser(input.target.id, input.target.value);\n  }\n  onLogOut=()=>{\n    fetch(targets.signout, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(this.state.user)\n    })\n      .then(response => {\n        if (response.status === 200) {\n          alert('Sign Out');\n          this.setState({ login: false ,user:initState,retrive:initState});\n          this.onRouteChange('signin')\n          return response.json();\n        }\n        else\n          alert('Failed');\n      })\n      .then(data=>this.setState({retrive:data}))\n      .catch(err => {\n        console.log(err)\n        this.setState({ login: false ,user:initState,retrive:initState});\n      });\n  }\n  onLogIn = () => {\n    fetch(targets.signin, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(this.state.user)\n    })\n      .then(response => {\n        if (response.status === 200) {\n          alert('Sign In');\n          this.setState({ login: true });\n          this.onRouteChange('users')\n          return response.json();\n        }\n        else\n          alert('Failed');\n      })\n      .then(data=>this.setState({retrive:data}))\n      .catch(err => {\n        console.log(err)\n        this.setState({ login: false });\n      });\n  }\n  onRegister=()=>{\n    fetch(targets.signup,{\n      method:\"POST\",\n      headers:{\"Content-Type\":\"application/json\"},\n      body:JSON.stringify(this.state.user)\n  })\n  .then(response=>{\n      if(response.status===200)\n          alert('Sign up');\n      else\n          alert('Failed');\n  })\n  .catch(err=>console.log(err));\n  }\n  getRoute = () => {\n    const { onChange, onLogIn ,onRegister} = this;\n    const {genders,active}=this.state;\n    switch (this.state.route) {\n      case 'signin':\n        return <Login onChange={onChange} onSubmit={onLogIn} />\n      case 'signup':\n        return <Register onChange={onChange} onSubmit={onRegister} genders={genders}/>;\n        case 'users':\n          return <Accounts />\n          case 'profile':\n          return <div>\n             <Profile />\n                <br />\n                <Password />\n                <br />\n                <Remove />\n                <br />\n          </div>\n      default:\n        return <Login onChange={onChange} onSubmit={onLogIn} />\n    }\n  }\n  onRouteChange=(route)=>{\n    this.setState({route});\n  }\n  render() {\n    const { onRouteChange,getRoute} = this;\n    const view=getRoute();\n    const { login } = this.state;\n    return (\n      <div className=\"App\">\n        <nav class=\"ph3 ph5-ns pv4 w-100\">\n          <div class=\"nowrap overflow-x-auto\">\n            {login ?\n              <div>\n                <Nav action={onRouteChange} link=\"users\" name=\"Active Users\" />\n                <Nav action={onRouteChange} link=\"profile\" name=\"Profile\" />\n                <Nav action={onRouteChange} link=\"signin\" name=\"Sign Out\" />\n              </div>\n              :\n              <div>\n                <Nav action={onRouteChange} link=\"signin\" name=\"Sign In\" />\n                <Nav action={onRouteChange} link=\"signup\" name=\"Sign Up\" />\n              </div>\n            }\n\n\n          </div>\n        </nav>\n        {view}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}